{"version":3,"file":"fetch-room-info-api-live.js","sourceRoot":"","sources":["../../../../src/lib/web/routes/fetch-room-info-api-live.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AACtC,2CAAsD;AAYtD,MAAa,6BAA8B,SAAQ,aAAyE;IAExH,KAAK,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE;QAEnB,+BAA+B;QAC/B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAoC,qBAAqB,EAAE;YACvH,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;YAC9B,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,iCAAiC;QACjC,IAAI,QAAQ,CAAC,UAAU,EAAE;YACrB,MAAM,IAAI,6BAAoB,CAAC,aAAa,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,OAAO,IAAI,eAAe,GAAG,EAAE,SAAS,CAAC,CAAC;SAC1H;QAED,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;YAC/B,MAAM,IAAI,6BAAoB,CAAC,8BAA8B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SACvG;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;CAEJ;AAvBD,sEAuBC","sourcesContent":["import { Route } from '@/types/route';\r\nimport { InvalidResponseError } from '@/types/errors';\r\n\r\nexport type FetchRoomInfoFromApiRouteParams = { uniqueId: string };\r\nexport type FetchRoomInfoFromApiRouteResponse = {\r\n    statusCode: number;\r\n    message?: string;\r\n    data?: {\r\n        user?: Record<string, any> & { roomId: string },\r\n        liveRoom?: Record<string, any> & {status: number, roomId: string}\r\n    },\r\n};\r\n\r\nexport class FetchRoomInfoFromApiLiveRoute extends Route<FetchRoomInfoFromApiRouteParams, FetchRoomInfoFromApiRouteResponse> {\r\n\r\n    async call({ uniqueId }): Promise<FetchRoomInfoFromApiRouteResponse> {\r\n\r\n        // Fetch object from TikTok API\r\n        const roomData = await this.webClient.getJsonObjectFromTikTokApi<FetchRoomInfoFromApiRouteResponse>('api-live/user/room/', {\r\n            ...this.webClient.clientParams,\r\n            uniqueId: uniqueId,\r\n            sourceType: '54'\r\n        });\r\n\r\n        // Check if the response is valid\r\n        if (roomData.statusCode) {\r\n            throw new InvalidResponseError(`API Error ${roomData.statusCode} (${roomData.message || 'Unknown Error'})`, undefined);\r\n        }\r\n\r\n        if (!roomData?.data?.user?.roomId) {\r\n            throw new InvalidResponseError(`Invalid response from API: ${JSON.stringify(roomData)}`, undefined);\r\n        }\r\n\r\n        return roomData;\r\n    }\r\n\r\n}\r\n"]}